local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Player = Players.LocalPlayer
local character = Player.Character or Player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local gui = Player:WaitForChild("PlayerGui")
local screenGui = gui:WaitForChild("ScreenGui")

-- Set Ultimate Attribute
character:SetAttribute("UltimateName", "KAIOKEN TIMES FIVE HUNDRED")
screenGui.MagicHealth.Health.Bar.Bar.ImageColor3 = Color3.fromRGB(222, 37, 37)

local moves = {
    ["Tri-Beam"] = {slot = 1, text = ""},
    ["Angered Barrage"] = {slot = 2, text = ""},
    ["Dodon Ray"] = {slot = 3, text = ""},
    ["Uptilt"] = {slot = 4, text = ""},
}

local ultNames = {
    ["RAGE COUNTER"] = {slot = 1, text = "Some text"},
    ["Move Name 2"] = {slot = 2, text = "Another text"},
    ["Move Name 3"] = {slot = 3, text = ""},
    ["Move Name 4"] = {slot = 4, text = ""},
}

local function setToolName(movetable)
    for name, data in pairs(movetable) do
        local hotbarSlot = gui.Hotbar.Backpack.Hotbar:FindFirstChild(data.slot).Base
        hotbarSlot.ToolName.Text = name
        hotbarSlot.Reuse.Text = data.text
        hotbarSlot.Reuse.Reuse.Text = data.text
        hotbarSlot.Reuse.Visible = true
    end
end

setToolName(moves)

character:GetAttributeChangedSignal("Ulted"):Connect(function()
    if not character:GetAttribute("Ulted") then
        task.wait()
        setToolName(moves)
    end
end)

Player.Backpack.ChildAdded:Connect(function(tool)
    if tool.Name == "Death Counter" then
        task.wait()
        setToolName(ultNames)
    end
end)

local animationOverrides = {
    ["rbxassetid://10469493270"] = "13716964686", -- Idle
    ["rbxassetid://10468665991"] = "18459215845", -- Move1
    ["rbxassetid://10466974800"] = "12534735382", -- Move2
    ["rbxassetid://10471336737"] = "13295936866", -- Move3
    ["rbxassetid://12510170988"] = "12509505723", -- Move4
    ["rbxassetid://10469493270"] = "13294471966" -- m1
    ["rbxassetid://10469630950"] = "17889471098" -- m2
    ["rbxassetid://10469639222"] = "16552234590" -- m3
    ["rbxassetid://10469643643"] = "13378708199" -- m4
}

local function replaceAnimation(animationTrack)
    local newAnimId = animationOverrides[animationTrack.Animation.AnimationId]
    if newAnimId then
        local anim = Instance.new("Animation")
        anim.AnimationId = "rbxassetid://" .. newAnimId
        local loadedAnim = humanoid:LoadAnimation(anim)
        loadedAnim.Priority = Enum.AnimationPriority.Action2
        loadedAnim:Play()
    end
end

pcall(function()
    if getgenv().animationHook then getgenv().animationHook:Disconnect() end
end)

getgenv().animationHook = humanoid.AnimationPlayed:Connect(replaceAnimation)



local Players, RunService = game:GetService("Players"), game:GetService("RunService")
local blockedAnimations = {
    ["rbxassetid://10468665991"] = true, ["rbxassetid://10466974800"] = true,
    ["rbxassetid://10471336737"] = true, ["rbxassetid://12510170988"] = true,
    ["rbxassetid://10469493270"] = true, ["rbxassetid://10469630950"] = true,
    ["rbxassetid://10469643643"] = true, ["rbxassetid://10469639222"] = true
}

local function stopBlockedAnimations(humanoid)
    for _, track in pairs(humanoid:GetPlayingAnimationTracks()) do
        if blockedAnimations[track.Animation and track.Animation.AnimationId] then track:Stop() end
    end
end

local function onCharacterAdded(character)
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    if humanoid then
        local connection; connection = RunService.Heartbeat:Connect(function()
            if character.Parent then stopBlockedAnimations(humanoid) else connection:Disconnect() end
        end)
    end
end

local function onPlayerAdded(player)
    player.CharacterAdded:Connect(onCharacterAdded)
    if player.Character then onCharacterAdded(player.Character) end
end

Players.PlayerAdded:Connect(onPlayerAdded)
for _, player in ipairs(Players:GetPlayers()) do onPlayerAdded(player) end
